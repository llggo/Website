@model Company.Areas.Manage.Models.CrudProduct

@using Company.Extends.Library
@using System.Threading
@using Company.Extends.Language

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Manage/Views/Shared/_Layout.cshtml";

    var currentLanguage = Thread.CurrentThread.CurrentCulture.IetfLanguageTag;
    var language = new Language();
    var LanguageList = language.LanguageList(currentLanguage);

    List<SelectListItem> item = new List<SelectListItem>();
    item.Add(new SelectListItem { Text = "True", Value = "True" });
    item.Add(new SelectListItem { Text = "False", Value = "False" });

    Model.ProductLanguage = new Dictionary<string, Company.Areas.Manage.Models.ProductLanguage>() { };

    foreach (var ls in LanguageList)
    {
        Model.ProductLanguage.Add(ls.CodeCheck, new Company.Areas.Manage.Models.ProductLanguage() { });
    }

}

<legend>
    Create Category
</legend>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="row margin-bottom-5">
        <div class="col-md-12">
            <div class="widget-body">
                <ul id="tab-language" class="nav nav-tabs bordered">
                    @{
                        foreach (var l in LanguageList)
                        {
                            <li class="@((l.CodeCheck == l.CodeObject)? "active" : "")">
                                <a href="#@l.Id" data-toggle="tab">@l.Name</a>
                            </li>
                        }
                    }
                </ul>
                <div id="tab-content-language" class="tab-content padding-10">
                    @{
                        foreach (var l in LanguageList)
                        {
                            <div class="tab-pane fade in @((l.CodeCheck == l.CodeObject)? "active" : "")" id="@l.Id">

                                @foreach (var m in Model.ProductLanguage)
                                {
                                    if (m.Key.Equals(l.CodeCheck))
                                    {
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ProductLanguage[m.Key].Name)
                                            @Html.TextBoxFor(model => model.ProductLanguage[m.Key].Name, new { @class = "form-control" })
                                            @Html.HiddenFor(model => model.ProductLanguage[m.Key].LanguageId, new { @Value = l.Id, @readonly = "readonly" })
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ProductLanguage[m.Key].Describle)
                                            @Html.TextBoxFor(model => model.ProductLanguage[m.Key].Describle, new { @class = "form-control" })
                                        </div>
                                    }
                                }
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <a class="btn btn-default" href="@Url.Action("Index")" role="button">Back</a>
            <input class="btn btn-default btn-success" type="submit" value="Submit">
        </div>
    </div>


}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
