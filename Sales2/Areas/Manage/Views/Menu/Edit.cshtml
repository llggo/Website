@model Sales.Areas.Manage.Models.MenuModel
@using Sales.Models

@{
    ViewBag.Title = "Edit";

    var db = new ApplicationDbContext();

    var MenuList = new List<SelectListItem>();

    MenuList.Add(new SelectListItem
    {
        Text = "-- Chọn --",
        Value = ""
    });

    var Items = (from m in db.Menu
                 where m.Id != Model.Id
                 select m).Select(s => new SelectListItem
                 {
                     Text = s.Name,
                     Value = s.Id.ToString()
                 });

    MenuList.AddRange(Items);
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.Create.Time)
    @Html.HiddenFor(model => model.Create.User)

    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: null)
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter name" } })
                <small id="nameHelp" class="form-text text-muted">
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </small>
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.ParentId, htmlAttributes: null)
                @Html.DropDownListFor(model => model.ParentId, MenuList, htmlAttributes: new { @class = "form-control" })
                <small id="nameHelp" class="form-text text-muted">
                    @Html.ValidationMessageFor(model => model.ParentId, "", new { @class = "text-danger" })
                </small>
            </div>
        </div>

        <div class="col-md-1">
            <div class="form-group">
                @Html.LabelFor(model => model.Order, htmlAttributes: null)
                @Html.EditorFor(model => model.Order, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter order" } })
                <small id="nameHelp" class="form-text text-muted">
                    @Html.ValidationMessageFor(model => model.Order, "", new { @class = "text-danger" })
                </small>
            </div>
        </div>

        <div class="col-md-1">
            <div class="form-group">
                @Html.LabelFor(model => model.IsRoot, htmlAttributes: null)
                @Html.EditorFor(model => model.IsRoot, new { htmlAttributes = new { @class = "form-control" } })
                <small id="nameHelp" class="form-text text-muted">
                    @Html.ValidationMessageFor(model => model.IsRoot, "", new { @class = "text-danger" })
                </small>
            </div>
        </div>

        <div class="col-md-1">
            <div class="form-group">
                @Html.LabelFor(model => model.IsParent, htmlAttributes: null)
                @Html.EditorFor(model => model.IsParent, new { htmlAttributes = new { @class = "form-control" } })
                <small id="nameHelp" class="form-text text-muted">
                    @Html.ValidationMessageFor(model => model.IsParent, "", new { @class = "text-danger" })
                </small>
            </div>
        </div>

        <div class="col-md-1">
            <div class="form-group">
                @Html.LabelFor(model => model.Visible, htmlAttributes: null)
                @Html.EditorFor(model => model.Visible, new { htmlAttributes = new { @class = "form-control" } })
                <small id="nameHelp" class="form-text text-muted">
                    @Html.ValidationMessageFor(model => model.Visible, "", new { @class = "text-danger" })
                </small>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="form-group">
                @Html.LabelFor(model => model.Target, htmlAttributes: null)
                @Html.EditorFor(model => model.Target, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter link" } })
                <small id="nameHelp" class="form-text text-muted">
                    @Html.ValidationMessageFor(model => model.Target, "", new { @class = "text-danger" })
                </small>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="form-group">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
