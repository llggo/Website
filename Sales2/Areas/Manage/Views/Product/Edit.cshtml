@model Sales.Areas.Manage.Models.Product
@using Sales.Models
@using Sales.Controllers

@{

    ViewBag.Title = "Sửa sản phẩm";

    var db = new ApplicationDbContext();

    var Categories = new List<SelectListItem>();

    Categories.Add(new SelectListItem
    {
        Text = "-- Chọn --",
        Value = ""
    });

    var Items = (from m in db.Category
                 select m).Select(s => new SelectListItem
                 {
                     Text = s.Name,
                     Value = s.Id.ToString()
                 });

    Categories.AddRange(Items);

    var Images = (from i in db.ProductImage
                  where i.ProductId == Model.Id
                  select i).ToList();
}

<h2>Sửa sản phẩm</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.Create.Time)
    @Html.HiddenFor(model => model.Create.User)

    <div class="row">
        <div class="col-md-3">
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: null)
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter name" } })
                <small id="nameHelp" class="form-text text-muted">
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </small>
            </div>
        </div>

        <div class="col-md-3">
            <div class="form-group">
                @Html.LabelFor(model => model.CategoryId, htmlAttributes: null)
                @Html.DropDownListFor(model => model.CategoryId, Categories, htmlAttributes: new { @class = "form-control" })
                <small id="nameHelp" class="form-text text-muted">
                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                </small>
            </div>
        </div>

        <div class="col-md-2">
            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: null)
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @placeholder = "Giá" } })
                <small id="nameHelp" class="form-text text-muted">
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </small>
            </div>
        </div>

        <div class="col-md-2">
            <div class="form-group">
                @Html.LabelFor(model => model.Discount, htmlAttributes: null)
                @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control", @placeholder = "Giảm giá còn" } })
                <small id="nameHelp" class="form-text text-muted">
                    @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                </small>
            </div>
        </div>

        <div class="col-md-1">
            <div class="form-group">
                @Html.LabelFor(model => model.Order, htmlAttributes: null)
                @Html.EditorFor(model => model.Order, new { htmlAttributes = new { @class = "form-control", @placeholder = "Thứ tự" } })
                <small id="nameHelp" class="form-text text-muted">
                    @Html.ValidationMessageFor(model => model.Order, "", new { @class = "text-danger" })
                </small>
            </div>
        </div>
        <div class="col-md-1">
            <div class="form-group">
                @Html.LabelFor(model => model.Visible, htmlAttributes: null)
                @Html.EditorFor(model => model.Visible, new { htmlAttributes = new { @class = "form-control", @style = "margin:0 auto;" } })
                <small id="nameHelp" class="form-text text-muted">
                    @Html.ValidationMessageFor(model => model.Visible, "", new { @class = "text-danger" })
                </small>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <input id="btn-add-image" type="button" class="form-control" value="Thêm ảnh sản phẩm" title="Thêm ảnh click vào đây" />
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <input type="submit" value="Lưu" class="form-control" />
            </div>
        </div>
    </div>

    <div id="image-dynamic-add" class="row">
        @foreach (var i in Images)
        {
            <div id="col-image-@i.Id" class="col-md-2 margin-bottom-10">
                    <img class="img-responsive img-thumbnail" src="@i.Target" />
                    <input onclick="remove(@i.Id)" class="form-control" type="button" value="Xóa ảnh" />
            </div>
        }
        
    </div>

    <div id="image-hidden-data" style="display:none;">
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts{
    <script src="~/Plugins/ckfinder/ckfinder.js"></script>
    <script>
        var finder = new CKFinder();
        var index = 0;

        $(document).ready(function () {
            $('#btn-add-image').on('click', function () {

                finder.selectActionFunction = function (fileUrl) {


                    var row = "<div id=\"col-image-" + index + "\" class=\"col-md-2 margin-bottom-10\">";
                    row += "<img class=\"img-responsive img-thumbnail\" src=\"" + fileUrl + "\" />";
                    row += "<input onclick=\"remove(" + index + ")\"  class=\"form-control\" type=\"button\" value=\"Xóa ảnh\">";
                    row += "</div>";

                    $('#image-dynamic-add').append(row);

                    $.post("/manage/image/create", {
                        productId: @Model.Id,
                        target: fileUrl
                    }, function (data, status) {
                        //alert("Data: " + data + "\nStatus: " + status);
                    });

                    index++;
                }

                finder.popup();


            });
        });

        function remove(index) {
            var elem = document.getElementById('col-image-' + index);
            elem.parentElement.removeChild(elem);

            $.post("/manage/image/delete", {
                id: index
            }, function (data, status) {
                //alert("Data: " + data + "\nStatus: " + status);
            });

            index--;
        }


        function file(buttonId, txtboxId) {
            $('#' + buttonId).click(function () {
                finder.selectActionFunction = function (fileUrl) {
                    document.getElementById(txtboxId).value = fileUrl;
                }
                finder.popup();
            });
        }
    </script>
}
